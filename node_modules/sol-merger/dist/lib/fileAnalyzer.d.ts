import { ExportsAnalyzerResult } from './exportsAnalyzer';
import { RegistredImport } from './importRegistry';
import { ImportsAnalyzerResult } from './importsAnalyzer';
export declare class FileAnalyzer {
    filename: string;
    removeComments: boolean;
    /**
     * Builds the function body depending on the export
     */
    static buildExportBody(analyzedFile: FileAnalyzerResult, e: ExportsAnalyzerResult, newName: string | null, globalRenames: RegistredImport[]): string;
    /**
     * Filename to read to get contract data
     */
    constructor(filename: string, removeComments?: boolean);
    /**
     * Returns imports and exports of the processing file
     */
    analyze(): Promise<FileAnalyzerResult>;
}
export interface FileAnalyzerResult {
    filename: string;
    contents: string;
    imports: ImportsAnalyzerResult[];
    exports: ExportsAnalyzerResult[];
}
